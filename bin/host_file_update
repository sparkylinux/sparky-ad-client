#!/bin/bash -e
### BEGIN INIT INFO
# Provides: host_file_update
# Required-Start: $network
# Required-Stop: $network
# Required-Reload: $network
# Default-Start: 2 3 4 5
# Default-Stop:	0 1 6
# Description: Changes the hosts file to match DHCP Ip number
#
### END INIT INFO
#
set -e

case "$1" in
  start)
    # Set the Client's hostname
    if [ -f /tmp/detectdomain.$$ ]; then
      rm -f /tmp/detectdomain.$$
      rm -f /tmp/detectdcip.$$
      rm -f /tmp/detectdcdomain.$$
      rm -f /tmp/detectrealm.$$
    fi
    myHostName=$(cat /etc/hostname | awk -F. '{print $1}')
    realm discover >> /tmp/detectrealm.$$
    DETECTDOM=$(cat /tmp/detectrealm.$$ | head -n 1 | awk -F: '{print $1}')
    if [ "$DETECTDOM" = "" ]; then
      myFQDN=$myHostName
      # Lookup the current loopback IP Address and strip it out of the result
      loaddr4=$(/sbin/ifconfig lo | grep 'inet '| cut -d: -f2 | awk '{ print $2}')
      loaddr6=$(/sbin/ifconfig lo | grep 'inet6 ' | awk '{ print $2}')
      # Lookup the current IP Address and strip it out of the result
      ipaddr4=$(/sbin/ifconfig | grep 'inet '| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $2}')
      ipaddr6=$(/sbin/ifconfig | grep 'inet6 '| grep -v '::1' | awk '{ print $2}') 
      # erase /etc/hosts and create a new one
      rm -rf /etc/hosts
      touch /etc/hosts
      #  Add the loopback IP Address back current IP Address and HostName to /etc/hosts
      cat > /etc/hosts << FOO
$loaddr4 localhost localhost.localdomain
$loaddr6 localhost localhost.localdomain ip6-localhost ip6-loopback

fe00::0		ip6-localnet
ff00::0		ip6-mcastprefix
ff02::1		ip6-allnodes
ff02::2		ip6-allrouters

$ipaddr4 $myHostName ${myHostName^^}
$ipaddr6 $myHostName ${myHostName^^}
FOO
    else
      nslookup -type=soa $DETECTDOM | head -n 1 | awk -FServer: '{print $2}' | awk '{print $1}' >> /tmp/detectdcip.$$
      DETECTDCIP=`cat /tmp/detectdcip.$$ | head -n 1`
      realm discover | head -n 1 >> /tmp/detectdcdomain.$$
      myDomainName=`cat /tmp/detectdcdomain.$$`
      myFQDN=$myHostName.$myDomainName
      DETECTDCFQDN="$(dig +short NS $DETECTDOM)"
      DCNAME="$(echo $DETECTDCFQDN | awk -F. '{print $1}')"
      UPDCNAME="${DCNAME^^}"
      DCFQDN="${DETECTDCFQDN::-1}"
      UPDCFQDN="${DCFQDN^^}"
    fi
    echo "$myDomainName is being used as domain name for $myFQDN"
    domainname $myDomainName
    # Lookup the current loopback IP Address and strip it out of the result
    loaddr4=$(/sbin/ifconfig lo | grep 'inet '| cut -d: -f2 | awk '{ print $2}')
    loaddr6=$(/sbin/ifconfig lo | grep 'inet6 ' | awk '{ print $2}')
    # Lookup the current IP Address and strip it out of the result
    ipaddr4=$(/sbin/ifconfig | grep 'inet '| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $2}')
    ipaddr6=$(/sbin/ifconfig | grep 'inet6 '| grep -v '::1' | awk '{ print $2}') 
    # erase /etc/hosts and create a new one
    rm -rf /etc/hosts
    touch /etc/hosts
    #  Add the loopback IP Address back current IP Address and HostName to /etc/hosts
    cat > /etc/hosts << FOO
$loaddr4 localhost localhost.localdomain
$loaddr6 localhost localhost.localdomain ip6-localhost ip6-loopback

fe00::0		ip6-localnet
ff00::0		ip6-mcastprefix
ff02::1		ip6-allnodes

$DETECTDCIP $DCFQDN $DCNAME $UPDCFQDN $UPDCNAME

$ipaddr4 $myFQDN $myHostName ${myFQDN^^} ${myHostName^^}
$ipaddr6 $myFQDN $myHostName ${myFQDN^^} ${myHostName^^}
FOO
  exit 0
;;
  stop)
    # Set the Client's hostname
    if [ -f /tmp/detectdomain.$$ ]; then
      rm -f /tmp/detectdomain.$$
      rm -f /tmp/detectdcip.$$
      rm -f /tmp/detectdcdomain.$$
      rm -f /tmp/detectrealm.$$
    fi
    myHostName=$(cat /etc/hostname | awk -F. '{print $1}')
    realm discover >> /tmp/detectrealm.$$
    DETECTDOM=$(cat /tmp/detectrealm.$$ | head -n 1 | awk -F: '{print $1}')
    if [ "$DETECTDOM" = "" ]; then
      myFQDN=$myHostName
      # Lookup the current loopback IP Address and strip it out of the result
      loaddr4=$(/sbin/ifconfig lo | grep 'inet '| cut -d: -f2 | awk '{ print $2}')
      loaddr6=$(/sbin/ifconfig lo | grep 'inet6 ' | awk '{ print $2}')
      # Lookup the current IP Address and strip it out of the result
      ipaddr4=$(/sbin/ifconfig | grep 'inet '| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $2}')
      ipaddr6=$(/sbin/ifconfig | grep 'inet6 '| grep -v '::1' | awk '{ print $2}') 
      # erase /etc/hosts and create a new one
      rm -rf /etc/hosts
      touch /etc/hosts
      #  Add the loopback IP Address back current IP Address and HostName to /etc/hosts
      cat > /etc/hosts << FOO
$loaddr4 localhost localhost.localdomain
$loaddr6 localhost localhost.localdomain ip6-localhost ip6-loopback

fe00::0		ip6-localnet
ff00::0		ip6-mcastprefix
ff02::1		ip6-allnodes
ff02::2		ip6-allrouters

$ipaddr4 $myHostName ${myHostName^^}
$ipaddr6 $myHostName ${myHostName^^}
FOO
    else
      nslookup -type=soa $DETECTDOM | head -n 1 | awk -FServer: '{print $2}' | awk '{print $1}' >> /tmp/detectdcip.$$
      DETECTDCIP=`cat /tmp/detectdcip.$$ | head -n 1`
      realm discover | head -n 1 >> /tmp/detectdcdomain.$$
      myDomainName=`cat /tmp/detectdcdomain.$$`
      myFQDN=$myHostName.$myDomainName
      DETECTDCFQDN="$(dig +short NS $DETECTDOM)"
      DCNAME="$(echo $DETECTDCFQDN | awk -F. '{print $1}')"
      UPDCNAME="${DCNAME^^}"
      DCFQDN="${DETECTDCFQDN::-1}"
      UPDCFQDN="${DCFQDN^^}"
    fi
    echo "$myDomainName is being used as domain name for $myFQDN"
    domainname $myDomainName
    # Lookup the current loopback IP Address and strip it out of the result
    loaddr4=$(/sbin/ifconfig lo | grep 'inet '| cut -d: -f2 | awk '{ print $2}')
    loaddr6=$(/sbin/ifconfig lo | grep 'inet6 ' | awk '{ print $2}')
    # Lookup the current IP Address and strip it out of the result
    ipaddr4=$(/sbin/ifconfig | grep 'inet '| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $2}')
    ipaddr6=$(/sbin/ifconfig | grep 'inet6 '| grep -v '::1' | awk '{ print $2}') 
    # erase /etc/hosts and create a new one
    rm -rf /etc/hosts
    touch /etc/hosts
    #  Add the loopback IP Address back current IP Address and HostName to /etc/hosts
    cat > /etc/hosts << FOO
$loaddr4 localhost localhost.localdomain
$loaddr6 localhost localhost.localdomain ip6-localhost ip6-loopback

fe00::0		ip6-localnet
ff00::0		ip6-mcastprefix
ff02::1		ip6-allnodes

$DETECTDCIP $DCFQDN $DCNAME $UPDCFQDN $UPDCNAME

$ipaddr4 $myFQDN $myHostName ${myFQDN^^} ${myHostName^^}
$ipaddr6 $myFQDN $myHostName ${myFQDN^^} ${myHostName^^}
FOO
  exit 0
;;
  restart)
    # Set the Client's hostname
    if [ -f /tmp/detectdomain.$$ ]; then
      rm -f /tmp/detectdomain.$$
      rm -f /tmp/detectdcip.$$
      rm -f /tmp/detectdcdomain.$$
      rm -f /tmp/detectrealm.$$
    fi
    myHostName=$(cat /etc/hostname | awk -F. '{print $1}')
    realm discover >> /tmp/detectrealm.$$
    DETECTDOM=$(cat /tmp/detectrealm.$$ | head -n 1 | awk -F: '{print $1}')
    if [ "$DETECTDOM" = "" ]; then
      myFQDN=$myHostName
      # Lookup the current loopback IP Address and strip it out of the result
      loaddr4=$(/sbin/ifconfig lo | grep 'inet '| cut -d: -f2 | awk '{ print $2}')
      loaddr6=$(/sbin/ifconfig lo | grep 'inet6 ' | awk '{ print $2}')
      # Lookup the current IP Address and strip it out of the result
      ipaddr4=$(/sbin/ifconfig | grep 'inet '| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $2}')
      ipaddr6=$(/sbin/ifconfig | grep 'inet6 '| grep -v '::1' | awk '{ print $2}') 
      # erase /etc/hosts and create a new one
      rm -rf /etc/hosts
      touch /etc/hosts
      #  Add the loopback IP Address back current IP Address and HostName to /etc/hosts
      cat > /etc/hosts << FOO
$loaddr4 localhost localhost.localdomain
$loaddr6 localhost localhost.localdomain ip6-localhost ip6-loopback

fe00::0		ip6-localnet
ff00::0		ip6-mcastprefix
ff02::1		ip6-allnodes
ff02::2		ip6-allrouters

$ipaddr4 $myHostName ${myHostName^^}
$ipaddr6 $myHostName ${myHostName^^}
FOO
    else
      nslookup -type=soa $DETECTDOM | head -n 1 | awk -FServer: '{print $2}' | awk '{print $1}' >> /tmp/detectdcip.$$
      DETECTDCIP=`cat /tmp/detectdcip.$$ | head -n 1`
      realm discover | head -n 1 >> /tmp/detectdcdomain.$$
      myDomainName=`cat /tmp/detectdcdomain.$$`
      myFQDN=$myHostName.$myDomainName
      DETECTDCFQDN="$(dig +short NS $DETECTDOM)"
      DCNAME="$(echo $DETECTDCFQDN | awk -F. '{print $1}')"
      UPDCNAME="${DCNAME^^}"
      DCFQDN="${DETECTDCFQDN::-1}"
      UPDCFQDN="${DCFQDN^^}"
    fi
    echo "$myDomainName is being used as domain name for $myFQDN"
    domainname $myDomainName
    # Lookup the current loopback IP Address and strip it out of the result
    loaddr4=$(/sbin/ifconfig lo | grep 'inet '| cut -d: -f2 | awk '{ print $2}')
    loaddr6=$(/sbin/ifconfig lo | grep 'inet6 ' | awk '{ print $2}')
    # Lookup the current IP Address and strip it out of the result
    ipaddr4=$(/sbin/ifconfig | grep 'inet '| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $2}')
    ipaddr6=$(/sbin/ifconfig | grep 'inet6 '| grep -v '::1' | awk '{ print $2}') 
    # erase /etc/hosts and create a new one
    rm -rf /etc/hosts
    touch /etc/hosts
    #  Add the loopback IP Address back current IP Address and HostName to /etc/hosts
    cat > /etc/hosts << FOO
$loaddr4 localhost localhost.localdomain
$loaddr6 localhost localhost.localdomain ip6-localhost ip6-loopback

fe00::0		ip6-localnet
ff00::0		ip6-mcastprefix
ff02::1		ip6-allnodes

$DETECTDCIP $DCFQDN $DCNAME $UPDCFQDN $UPDCNAME

$ipaddr4 $myFQDN $myHostName ${myFQDN^^} ${myHostName^^}
$ipaddr6 $myFQDN $myHostName ${myFQDN^^} ${myHostName^^}
FOO
  exit 0
;;
    *)
  echo "Use: /etc/init.d/host_file_update {start|stop|restart}"
  exit 0
;;
esac
exit 0

# /etc/init.d/host_file_update
# needs
# /lib/systemd/system/host_file_update.service
#